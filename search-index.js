var searchIndex = {};
searchIndex["gemini"] = {"doc":"","items":[[5,"setup_logger","gemini","Setup logging to file in user data dir.",null,{"o":{"g":["initerror"],"n":"result"}}],[5,"main","","",null,{}],[0,"astronomicals","","",null,null],[0,"galaxy","gemini::astronomicals","",null,null],[3,"Galaxy","gemini::astronomicals::galaxy","A galaxy of systems.",null,null],[12,"sectors","","",0,null],[12,"map","","",0,null],[12,"systems","","",0,null],[17,"_IMPL_SERIALIZE_FOR_Galaxy","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Galaxy","","",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"galaxy"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new galaxy with the given sectors and systems.",0,{"i":[{"g":["sector"],"n":"vec"},{"g":["system"],"n":"vec"}],"o":{"n":"self"}}],[11,"system","","Returns a reference to the system at the given location.",0,{"i":[{"n":"self"},{"n":"point"}],"o":{"g":["system"],"n":"option"}}],[11,"system_mut","","Returns a mutable reference to the system at the given location.",0,{"i":[{"n":"self"},{"n":"point"}],"o":{"g":["system"],"n":"option"}}],[11,"systems","","Returns references to all systems.",0,null],[11,"systems_mut","","Returns mutable references to all systems.",0,null],[11,"search_name","","Finds the system with the closest matching name.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["system"],"n":"option"}}],[11,"reachable","","Returns all system locations reachable from the given location within the given radius.",0,{"i":[{"n":"self"},{"n":"point"},{"n":"f64"}],"o":{"g":["point"],"n":"vec"}}],[11,"reachable_rect","","Returns all system locations reachable from the given location within the given rectangle.",0,{"i":[{"n":"self"},{"n":"point"},{"n":"point"}],"o":{"g":["point"],"n":"vec"}}],[11,"nearest","","Returns the nearest system location to the given point.",0,{"i":[{"n":"self"},{"n":"point"}],"o":{"g":["point"],"n":"option"}}],[11,"route","","Finds the shortest path from start to goal with at most range along any edge and a maximum max_steps number of nodes visited.",0,{"i":[{"n":"self"},{"n":"point"},{"n":"point"},{"n":"f64"},{"n":"u32"}],"o":{"n":"option"}}],[11,"default","","",0,{"o":{"n":"self"}}],[11,"update","","Advances time and updates all systems etc.",0,{"i":[{"n":"self"}]}],[0,"planet","gemini::astronomicals","",null,null],[3,"Planet","gemini::astronomicals::planet","Represents a visitable planet in game with some attributes.",null,null],[12,"name","","",1,null],[12,"mass","","",1,null],[12,"gravity","","",1,null],[12,"orbit_distance","","",1,null],[12,"surface_temperature","","",1,null],[12,"planet_type","","",1,null],[12,"economic_type","","",1,null],[3,"PlanetBuilder","","Builder for `Planet`.",null,null],[12,"name","","",2,null],[12,"mass","","",2,null],[12,"gravity","","",2,null],[12,"orbit_distance","","",2,null],[12,"surface_temperature","","",2,null],[12,"planet_type","","",2,null],[12,"economic_type","","",2,null],[4,"PlanetType","","Different types of planet, i.e environments. Depends on surface_temperature and mass.",null,null],[13,"Metal","","",3,null],[13,"Icy","","",3,null],[13,"Rocky","","",3,null],[13,"GasGiant","","",3,null],[13,"Earth","","",3,null],[4,"PlanetEconomy","","Different types of planet economies, depends on the planet type.",null,null],[13,"Agriculture","","",4,null],[13,"Extraction","","",4,null],[13,"HighTech","","",4,null],[13,"Industrial","","",4,null],[13,"None","","",4,null],[13,"Military","","",4,null],[13,"Refinary","","",4,null],[17,"_IMPL_SERIALIZE_FOR_Planet","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Planet","","",null,null],[17,"_IMPL_SERIALIZE_FOR_PlanetType","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_PlanetType","","",null,null],[17,"_IMPL_SERIALIZE_FOR_PlanetEconomy","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_PlanetEconomy","","",null,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",2,{"o":{"n":"planetbuilder"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"planetbuilder"}}],[11,"name","","",2,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"self"}}],[11,"mass","","",2,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"self"}}],[11,"gravity","","",2,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"self"}}],[11,"orbit_distance","","",2,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"self"}}],[11,"surface_temperature","","",2,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"self"}}],[11,"planet_type","","",2,{"i":[{"n":"self"},{"n":"planettype"}],"o":{"n":"self"}}],[11,"economic_type","","",2,{"i":[{"n":"self"},{"n":"planeteconomy"}],"o":{"n":"self"}}],[11,"build","","Builds a new `Planet`.",2,{"i":[{"n":"self"}],"o":{"g":["planet","string"],"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"planet"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"planettype"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"planettype"}],"o":{"n":"bool"}}],[11,"assert_receiver_is_total_eq","","",3,null],[11,"hash","","",3,null],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"planeteconomy"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"planeteconomy"}],"o":{"n":"bool"}}],[11,"assert_receiver_is_total_eq","","",4,null],[11,"hash","","",4,null],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"sector","gemini::astronomicals","",null,null],[3,"Sector","gemini::astronomicals::sector","Represents a group of systems in close proximity within the same faction. Markets in the economy is handled on this level of scale.",null,null],[12,"faction","","",5,null],[12,"system_locations","","",5,null],[17,"_IMPL_SERIALIZE_FOR_Sector","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Sector","","",null,null],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"sector"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"sector"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"sector"}],"o":{"n":"bool"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"star","gemini::astronomicals","",null,null],[3,"Star","gemini::astronomicals::star","Represents a Star in a system.",null,null],[12,"mass","","",6,null],[12,"luminosity","","",6,null],[12,"startype","","",6,null],[3,"StarBuilder","","Builder for `Star`.",null,null],[12,"mass","","",7,null],[12,"luminosity","","",7,null],[12,"startype","","",7,null],[4,"StarType","","Describes the type of star: Single or Binary.",null,null],[13,"Single","","",8,null],[13,"Binary","","",8,null],[17,"_IMPL_SERIALIZE_FOR_Star","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Star","","",null,null],[17,"_IMPL_SERIALIZE_FOR_StarType","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_StarType","","",null,null],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"default","","",7,{"o":{"n":"starbuilder"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"starbuilder"}}],[11,"mass","","",7,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"self"}}],[11,"luminosity","","",7,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"self"}}],[11,"startype","","",7,{"i":[{"n":"self"},{"n":"startype"}],"o":{"n":"self"}}],[11,"build","","Builds a new `Star`.",7,{"i":[{"n":"self"}],"o":{"g":["star","string"],"n":"result"}}],[11,"new","","",6,{"i":[{"n":"f64"},{"n":"f64"},{"n":"startype"}],"o":{"n":"self"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"startype"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"system","gemini::astronomicals","",null,null],[3,"System","gemini::astronomicals::system","Represets a single star system with at a given location with the given star and planets.",null,null],[12,"location","","",9,null],[12,"name","","",9,null],[12,"faction","","",9,null],[12,"security","","",9,null],[12,"state","","",9,null],[12,"reputation","","",9,null],[12,"star","","",9,null],[12,"satelites","","",9,null],[3,"SystemBuilder","","Builder for `System`.",null,null],[12,"location","","",10,null],[12,"name","","",10,null],[12,"faction","","",10,null],[12,"security","","",10,null],[12,"state","","",10,null],[12,"reputation","","",10,null],[12,"star","","",10,null],[12,"satelites","","",10,null],[3,"Reputation","","Represents the current player level of reputation with the system.",null,null],[12,"0","","",11,null],[4,"SystemSecurity","","Represents the different security levels a system is in at a given point.",null,null],[13,"Anarchy","","",12,null],[13,"Low","","",12,null],[13,"Medium","","",12,null],[13,"High","","",12,null],[4,"SystemState","","Represents the different states a system is in at a given point.",null,null],[13,"Contested","","",13,null],[13,"CivilWar","","",13,null],[13,"Boom","","",13,null],[13,"Bust","","",13,null],[13,"CivilUnrest","","",13,null],[13,"Famine","","",13,null],[13,"Outbreak","","",13,null],[17,"_IMPL_SERIALIZE_FOR_System","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_System","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Reputation","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Reputation","","",null,null],[17,"_IMPL_SERIALIZE_FOR_SystemSecurity","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_SystemSecurity","","",null,null],[17,"_IMPL_SERIALIZE_FOR_SystemState","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_SystemState","","",null,null],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",10,{"o":{"n":"systembuilder"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"systembuilder"}}],[11,"location","","",10,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"self"}}],[11,"name","","",10,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"self"}}],[11,"faction","","",10,{"i":[{"n":"self"},{"n":"faction"}],"o":{"n":"self"}}],[11,"security","","",10,{"i":[{"n":"self"},{"n":"systemsecurity"}],"o":{"n":"self"}}],[11,"state","","",10,{"i":[{"n":"self"},{"n":"systemstate"}],"o":{"n":"self"}}],[11,"reputation","","",10,{"i":[{"n":"self"},{"n":"reputation"}],"o":{"n":"self"}}],[11,"star","","",10,{"i":[{"n":"self"},{"n":"star"}],"o":{"n":"self"}}],[11,"satelites","","",10,{"i":[{"n":"self"},{"g":["planet"],"n":"vec"}],"o":{"n":"self"}}],[11,"build","","Builds a new `System`.",10,{"i":[{"n":"self"}],"o":{"g":["system","string"],"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"system"}}],[11,"update","","Updates the system one time step.",9,{"i":[{"n":"self"}]}],[11,"hash","","",9,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"system"}],"o":{"n":"bool"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"reputation"}}],[11,"update","","Updates the reputation level, one time step.",11,{"i":[{"n":"self"}]}],[11,"default","","",11,{"o":{"n":"reputation"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"systemsecurity"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"systemstate"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"economy","gemini","",null,null],[3,"Economy","gemini::economy","Holds the economic state for the entire game.",null,null],[12,"markets","","",14,null],[3,"Bid","","An offer to buy some commodity.",null,null],[12,"agent","","",15,null],[12,"commodity","","",15,null],[12,"amount","","",15,null],[12,"unit_price","","",15,null],[3,"BidBuilder","","Builder for `Bid`.",null,null],[12,"agent","","",16,null],[12,"commodity","","",16,null],[12,"amount","","",16,null],[12,"unit_price","","",16,null],[3,"Ask","","An offer to sell some commodity.",null,null],[12,"agent","","",17,null],[12,"commodity","","",17,null],[12,"amount","","",17,null],[12,"unit_price","","",17,null],[3,"AskBuilder","","Builder for `Ask`.",null,null],[12,"agent","","",18,null],[12,"commodity","","",18,null],[12,"amount","","",18,null],[12,"unit_price","","",18,null],[4,"Commodity","","A tradable and possibly producable commodity",null,null],[13,"Chemical","","",19,null],[13,"ConsumerItem","","",19,null],[13,"Food","","",19,null],[13,"IllegalDrug","","",19,null],[13,"IndustrialMaterial","","",19,null],[13,"LegalDrug","","",19,null],[13,"Machinery","","",19,null],[13,"Medicine","","",19,null],[13,"Metal","","",19,null],[13,"Mineral","","",19,null],[13,"Salvage","","",19,null],[13,"Slavery","","",19,null],[13,"Technology","","",19,null],[13,"Textile","","",19,null],[13,"Waste","","",19,null],[13,"Weapon","","",19,null],[0,"agent","","",null,null],[3,"Agent","gemini::economy::agent","Economic agent, able to take part in transactions.",null,null],[12,"seed","","",20,null],[12,"credits","","",20,null],[12,"populations","","",20,null],[12,"inventory","","",20,null],[12,"ideals","","",20,null],[12,"productions","","",20,null],[12,"price_beliefs","","",20,null],[17,"_IMPL_SERIALIZE_FOR_Agent","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Agent","","",null,null],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"STARTING_CREDITS","","",20,null],[18,"INITIAL_LOWER_BELIEF","","",20,null],[18,"INITIAL_UPPER_BELIEF","","",20,null],[18,"DEFAULT_PRICE","","",20,null],[18,"MIN_PRICE","","",20,null],[18,"POPULATION_FACTOR","","",20,null],[11,"new","","Create a new economic agent for the given system.",20,{"i":[{"n":"system"}],"o":{"n":"self"}}],[11,"initial_population","","Calculates the initial planet population based on mass and planet type.",20,{"i":[{"n":"f64"},{"n":"planettype"}],"o":{"n":"f64"}}],[11,"hash","","Returns the hash of the system to which the agent is associated.",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"populations","","Returns the system populations.",20,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"vec"}}],[11,"prices","","Returns the prices for all commodities known.",20,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"balance","","Returns the balance of a given commodity compared to the ideal amount currently in inventory.",20,{"i":[{"n":"self"},{"n":"commodity"}],"o":{"n":"i64"}}],[11,"update_inventory","","Adds delta amount of the given commodity to the inventory.",20,{"i":[{"n":"self"},{"n":"commodity"},{"n":"i64"}]}],[11,"update_credits","","Adds delta amount of credits.",20,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"update_price_belief","","Updates the price beliefs for the given commodity based on the given unit price. Success indicates whether the agent was successful in trading. Successful trades will strengthen the belief whereas unsucessful trades will weaken the belief.",20,{"i":[{"n":"self"},{"n":"commodity"},{"n":"u64"},{"n":"bool"}]}],[11,"generate_bid","","Generate a bid for the given commodity if there exists a demand.",20,{"i":[{"n":"self"},{"n":"commodity"}],"o":{"g":["bidbuilder"],"n":"option"}}],[11,"generate_ask","","Generate an ask for the given commodity if there exists surplus.",20,{"i":[{"n":"self"},{"n":"commodity"}],"o":{"g":["askbuilder"],"n":"option"}}],[11,"update_population","","Updates the planet populations held by the agent based on potential economic growth.",20,null],[11,"update","","Updates the inventory based on the consumption and production.",20,{"i":[{"n":"self"}]}],[0,"market","gemini::economy","",null,null],[3,"Market","gemini::economy::market","Controls an economic market, i.e a sector of trading systems.",null,null],[12,"average_prices","","",21,null],[12,"agents","","",21,null],[17,"_IMPL_SERIALIZE_FOR_Market","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Market","","",null,null],[11,"new","","Creates a new empty market.",21,{"o":{"n":"self"}}],[11,"agent","","Returns the agent, if any, which is associated with the given system.",21,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["arc"],"n":"option"}}],[11,"agents","","Returns a reference to all agents.",21,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"add_system","","Adds the given system to this market.",21,{"i":[{"n":"self"},{"n":"system"}]}],[11,"resolve_offers","","Attemps to resolve the bids and asks for the given commodity by matching the highest asks with the lowest bids performing the transaction. Returns the quantity traded.",21,{"i":[{"n":"self"},{"n":"commodity"},{"g":["bid"],"n":"vec"},{"g":["ask"],"n":"vec"}]}],[11,"update","","Update all agents in this market generate and solve transactions to update prices for commodities.",21,{"i":[{"n":"self"}]}],[17,"_IMPL_SERIALIZE_FOR_Economy","gemini::economy","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Economy","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Commodity","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Commodity","","",null,null],[11,"default","","",14,{"o":{"n":"economy"}}],[11,"new","","Creates the game economy using the given galaxy.",14,{"i":[{"n":"galaxy"}],"o":{"n":"economy"}}],[11,"commodity_prices","","Returns the prices for the available commodities the the given system.",14,{"i":[{"n":"self"},{"n":"system"}],"o":{"n":"vec"}}],[11,"populations","","",14,{"i":[{"n":"self"},{"n":"system"}],"o":{"g":["f64"],"n":"vec"}}],[11,"update","","Advances time and updates all agents etc.",14,{"i":[{"n":"self"}]}],[11,"default","","",16,{"o":{"n":"bidbuilder"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"bidbuilder"}}],[11,"agent","","",16,{"i":[{"n":"self"},{"g":["mutex"],"n":"arc"}],"o":{"n":"self"}}],[11,"commodity","","",16,{"i":[{"n":"self"},{"n":"commodity"}],"o":{"n":"self"}}],[11,"amount","","",16,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"self"}}],[11,"unit_price","","",16,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"self"}}],[11,"build","","Builds a new `Bid`.",16,{"i":[{"n":"self"}],"o":{"g":["bid","string"],"n":"result"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",18,{"o":{"n":"askbuilder"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"askbuilder"}}],[11,"agent","","",18,{"i":[{"n":"self"},{"g":["mutex"],"n":"arc"}],"o":{"n":"self"}}],[11,"commodity","","",18,{"i":[{"n":"self"},{"n":"commodity"}],"o":{"n":"self"}}],[11,"amount","","",18,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"self"}}],[11,"unit_price","","",18,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"self"}}],[11,"build","","Builds a new `Ask`.",18,{"i":[{"n":"self"}],"o":{"g":["ask","string"],"n":"result"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"commodity"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",19,{"i":[{"n":"self"},{"n":"commodity"}],"o":{"n":"bool"}}],[11,"assert_receiver_is_total_eq","","",19,null],[11,"hash","","",19,null],[11,"values","","",19,{"o":{"g":["commodity"],"n":"iter"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"entities","gemini","",null,null],[4,"Faction","gemini::entities","Represents a single Faction which is assigned on Sector level.",null,null],[13,"Empire","","",22,null],[13,"Federation","","",22,null],[13,"Cartel","","",22,null],[13,"Independent","","",22,null],[17,"_IMPL_SERIALIZE_FOR_Faction","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Faction","","",null,null],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"faction"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",22,null],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"faction"}],"o":{"n":"bool"}}],[11,"assert_receiver_is_total_eq","","",22,null],[11,"random_faction","","Generate a random faction according to the \"distribution\".",22,{"i":[{"n":"r"}],"o":{"n":"faction"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"event","gemini","",null,null],[3,"HANDLER","gemini::event","",null,null],[12,"__private_field","","",23,null],[3,"EventHandler","","Accepts events from all senders and propagates them to all recievers.",null,null],[12,"sender","","",24,null],[12,"receiver","","",24,null],[12,"listeners","","",24,null],[4,"Event","","User and system events.",null,null],[13,"Input","","",25,null],[13,"Update","","",25,null],[13,"Travel","","",25,null],[13,"Refuel","","",25,null],[13,"Dock","","",25,null],[13,"Undock","","",25,null],[13,"AutosaveStarted","","",25,null],[13,"AutosaveCompleted","","",25,null],[5,"add_keyboard_handler","","Start listener for keyboard events and forward to event handler.",null,{}],[5,"add_player_handler","","Start listener for events that should update player state.",null,{"i":[{"g":["game"],"n":"arc"}]}],[5,"add_update_handler","","Start listener for events that should run an update on the game state.",null,{"i":[{"g":["game"],"n":"arc"}]}],[7,"HANDLER","","",null,null],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"event"}}],[11,"deref","","",23,{"i":[{"n":"self"}],"o":{"n":"eventhandler"}}],[11,"initialize","","",23,{"i":[{"n":"self"}]}],[11,"new","","Create a new EventHandler.",24,{"o":{"n":"eventhandler"}}],[11,"start","","Start the global event handler.",24,{}],[11,"send_handle","","Get a sender handle which can be used to send events to all recievers.",24,{"i":[{"n":"self"}],"o":{"g":["event"],"n":"sender"}}],[11,"recv_handle","","Get a receiver handle which will be called when events are dispatched.",24,{"i":[{"n":"self"}],"o":{"g":["event"],"n":"receiver"}}],[0,"game","gemini","",null,null],[3,"Game","gemini::game","Main game state object, shared and syncronized by use of Arc and Mutex.",null,null],[12,"galaxy","","",26,null],[12,"shipyard","","",26,null],[12,"player","","",26,null],[12,"economy","","",26,null],[12,"updated","","",26,null],[17,"SAVE_PATH","","",null,null],[8,"Updatable","","All game types which should be updated when time is advanced.",null,null],[10,"update","","Performs an update for one time step.",27,{"i":[{"n":"self"}]}],[11,"new","","Creates a new game.",26,{"o":{"n":"arc"}}],[11,"update","","Update Game information, may advance time.",26,{"i":[{"n":"self"}]}],[11,"attempt_advance_time","","Attemps to advance time returning the number of days advanced if any.",26,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"save_all","","Creates and stores a quicksave of the current game.",26,{"i":[{"n":"self"}]}],[11,"save_player","","Creates and stores a quicksave of the player data.",26,{"i":[{"n":"self"}]}],[11,"load","","Attempts to load a quicksave of a game state.",26,{"o":{"g":["arc"],"n":"option"}}],[0,"game_config","gemini","",null,null],[3,"GameConfig","gemini::game_config","Contains high level configuration parameters for the game such as constants for generation.",null,null],[12,"map_seed","","",28,null],[12,"starting_credits","","",28,null],[12,"number_of_systems","","",28,null],[12,"system_spread","","",28,null],[12,"number_of_sectors","","",28,null],[17,"PREFS_PATH","","",null,null],[17,"_IMPL_SERIALIZE_FOR_GameConfig","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_GameConfig","","",null,null],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"gameconfig"}],"o":{"n":"bool"}}],[11,"ne","","",28,{"i":[{"n":"self"},{"n":"gameconfig"}],"o":{"n":"bool"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"retrieve","","Attempts to load a GameConfig from disk at the default preference location. If the loading fails for any reason, for example, the file does not exist, a new default GameConfig object is created, stored and returned.",28,{"o":{"n":"gameconfig"}}],[11,"store","","Attempts to store the GameConfig on disk at the default preference location.",28,{"i":[{"n":"self"}]}],[11,"default","","",28,{"o":{"n":"gameconfig"}}],[0,"generators","gemini","",null,null],[5,"generate_galaxy","gemini::generators","Generate a galaxy with systems etc, will use the provided config to guide the generation.",null,{"i":[{"n":"gameconfig"}],"o":{"n":"galaxy"}}],[0,"names","","",null,null],[3,"NameGen","gemini::generators::names","Name generator which generates based on names given in training data.",null,null],[12,"rng","","",29,null],[12,"base_names","","",29,null],[12,"cache","","",29,null],[12,"greek_suffix","","",29,null],[12,"roman_suffix","","",29,null],[12,"decorator_suffix","","",29,null],[12,"scientific_names","","",29,null],[11,"from_seed","","Creates a new NameGen with the given seed.",29,{"i":[{"n":"u32"}],"o":{"n":"namegen"}}],[11,"reseed","","Reseeds the name generator.",29,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"train","","Trains the underlying model using the given resouce.",29,{"i":[{"n":"self"},{"n":"astronomicalnamesresource"}]}],[11,"generate_name","","Generates a new main name using base names and suffixes.",29,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"option"}}],[11,"generate","","Attempts to generate a new name main name and several secondary names from the model.",29,null],[0,"planets","gemini::generators","",null,null],[3,"PlanetGen","gemini::generators::planets","Basic non deterministic name generator for generating new Planets which are similar to the trained data provided.",null,null],[12,"mass_gen","","",30,null],[12,"orbit_dist_gen","","",30,null],[18,"MIN_DIST","","Minimal distance to star.",30,null],[11,"new","","Create a new Planet generator which loads the star resources needed.",30,{"o":{"n":"self"}}],[11,"calculate_surface_temperature","","Calculate planet surface temperature from star luminosity and distance to it. Uses the Bond albedo for the Earth.",30,{"i":[{"n":"f64"},{"n":"star"}],"o":{"n":"f64"}}],[11,"predict_type","","Predict the planet type based on surface_temperature and mass.",30,{"i":[{"n":"r"},{"n":"f64"},{"n":"f64"}],"o":{"n":"planettype"}}],[11,"predict_economy","","Predict the planet economy type based on type.",30,{"i":[{"n":"r"},{"n":"planettype"}],"o":{"n":"planeteconomy"}}],[11,"generate","","Generates a new PlanetBuilder from the distribution using the provided random generator. Sets the fields which are independent on the context.",30,{"i":[{"n":"self"},{"n":"r"}],"o":{"g":["planetbuilder"],"n":"option"}}],[0,"sectors","gemini::generators","",null,null],[3,"SectorGen","gemini::generators::sectors","Used for generating sectors.",null,null],[11,"new","","Create a new sector generator.",31,{"o":{"n":"sectorgen"}}],[11,"generate","","Split the systems in to a set number of clusters using K-means.",31,{"i":[{"n":"self"},{"n":"gameconfig"},{"g":["point"],"n":"vec"}],"o":{"g":["sector"],"n":"vec"}}],[0,"stars","gemini::generators","",null,null],[3,"StarGen","gemini::generators::stars","Basic non deterministic name generator for generating new Stars.",null,null],[12,"mass_gen","","",32,null],[11,"new","","Create a new Star generator which loads the star resources needed.",32,{"o":{"n":"self"}}],[11,"generate","","Generates a new Star from the distribution using the provided random generator.",32,{"i":[{"n":"self"},{"n":"r"}],"o":{"g":["star"],"n":"option"}}],[0,"systems","gemini::generators","",null,null],[3,"SystemGen","gemini::generators::systems","Used for generating systems.",null,null],[12,"num_planets_gen","","",33,null],[12,"star_gen","","",33,null],[12,"planet_gen","","",33,null],[11,"new","","Create a new system generator.",33,{"o":{"n":"systemgen"}}],[11,"generate","","Generate a new star system at the given location with the given faction.",33,null],[0,"gui","gemini","",null,null],[3,"Gui","gemini::gui","Handles the graphical user interface to the user.",null,null],[12,"simulator","","",34,null],[12,"size","","",34,null],[12,"tabs","","",34,null],[12,"selected_tab","","",34,null],[12,"dialog","","",34,null],[12,"title_page","","",34,null],[4,"GUIEvent","","Events used for communicating specifically between GUI components.",null,null],[13,"StartNewGame","","",35,null],[13,"LoadExistingGame","","",35,null],[13,"OpenDialog","","",35,null],[13,"CloseDialog","","",35,null],[0,"dialog","","",null,null],[0,"alert","gemini::gui::dialog","",null,null],[3,"AlertDialog","gemini::gui::dialog::alert","Alert dialog window.",null,null],[12,"0","","",36,null],[6,"Action","","",null,null],[11,"new","","Create a new alert dialog.",36,{"i":[{"n":"string"},{"g":["fn"],"n":"box"}],"o":{"n":"self"}}],[11,"title","","Returns the title string describing the dialog box.",36,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"handle_event","","Handles the user provided event.",36,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[11,"draw","","Draws the dialog in the given terminal and area.",36,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[0,"confirm","gemini::gui::dialog","",null,null],[3,"ConfirmDialog","gemini::gui::dialog::confirm","Confirmation dialog window.",null,null],[12,"0","","",37,null],[6,"Action","","",null,null],[11,"new","","Create a new confirmation dialog.",37,{"i":[{"n":"string"},{"g":["fn"],"n":"box"},{"g":["fn"],"n":"box"}],"o":{"n":"self"}}],[11,"title","","Returns the title string describing the dialog box.",37,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"handle_event","","Handles the user provided event.",37,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[11,"draw","","Draws the dialog in the given terminal and area.",37,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[0,"multi","gemini::gui::dialog","",null,null],[3,"MultiDialog","gemini::gui::dialog::multi","Multiple choice dialog window.",null,null],[12,"sender","","",38,null],[12,"title","","",38,null],[12,"selected","","",38,null],[12,"actions","","",38,null],[6,"Action","","",null,null],[11,"new","","Create a new multiple choice dialog window.",38,{"i":[{"n":"string"},{"n":"vec"}],"o":{"n":"self"}}],[11,"title","","Returns the title string describing the dialog box.",38,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"handle_event","","Handles the user provided event.",38,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[11,"draw","","Draws the dialog in the given terminal and area.",38,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[8,"Dialog","gemini::gui::dialog","A dialog box.",null,null],[10,"title","","Returns the title string describing the dialog box.",39,{"i":[{"n":"self"}],"o":{"n":"string"}}],[10,"handle_event","","Handles the user provided event.",39,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[10,"draw","","Draws the dialog in the given terminal and area.",39,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[0,"info","gemini::gui","",null,null],[5,"draw_info_page","gemini::gui::info","Draws a information page with the given information.",null,{"i":[{"n":"terminal"},{"n":"rect"},{"n":"str"}]}],[17,"TITLE_ART","","",null,null],[0,"tab","gemini::gui","",null,null],[5,"create_tabs","gemini::gui::tab","Returns a vector of tabs to be used.",null,{"i":[{"n":"arc"}],"o":{"g":["box"],"n":"vec"}}],[0,"galaxymap","","",null,null],[3,"FACTION_COLORS","gemini::gui::tab::galaxymap","Color mapping for each faction.",null,null],[12,"__private_field","","",40,null],[3,"DEFAULT_STYLE","","Styling for unselected item.",null,null],[12,"__private_field","","",41,null],[3,"GalaxyMapTab","","Displays the galaxy map tab.",null,null],[12,"state","","",42,null],[12,"sender","","",42,null],[12,"search_mode","","",42,null],[12,"search_str","","",42,null],[12,"selected","","",42,null],[12,"route","","",42,null],[12,"cursor","","",42,null],[12,"map_scale","","",42,null],[7,"FACTION_COLORS","","",null,null],[7,"DEFAULT_STYLE","","",null,null],[17,"MIN_SNAP_DIST","","The minimum distance within which the gui will snap to the closest system.",null,null],[11,"deref","","",40,{"i":[{"n":"self"}],"o":{"n":"hashmap"}}],[11,"initialize","","",40,{"i":[{"n":"self"}]}],[11,"deref","","",41,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"initialize","","",41,{"i":[{"n":"self"}]}],[11,"find_route","","Attempts to find a route to the selected system.",42,{"i":[{"n":"self"}]}],[11,"travel_to_selected","","Moves the player's location to the selected system.",42,{"i":[{"n":"self"}]}],[11,"draw_search","","Draws the event box in the given terminal and area.",42,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[11,"draw_system_info","","Draw system ship information for the selected system, if any.",42,{"i":[{"n":"self"},{"n":"point"},{"g":["system"],"n":"option"},{"n":"terminal"},{"n":"rect"}]}],[11,"draw_galaxy_map","","Draw the galaxy map.",42,null],[11,"new","","Creates a map tab.",42,{"i":[{"g":["game"],"n":"arc"},{"g":["event"],"n":"sender"}],"o":{"n":"box"}}],[11,"title","","Returns the title string describing the tab.",42,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"handle_event","","Handles the user provided event.",42,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[11,"draw","","Draws the tab in the given terminal and area.",42,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[0,"market","gemini::gui::tab","",null,null],[3,"SELECTED_STYLE","gemini::gui::tab::market","Styling for selected item.",null,null],[12,"__private_field","","",43,null],[3,"DEFAULT_STYLE","","Styling for unselected item.",null,null],[12,"__private_field","","",44,null],[3,"MarketTab","","Displays the market tab.",null,null],[12,"selected","","",45,null],[12,"max_selected","","",45,null],[12,"state","","",45,null],[12,"sender","","",45,null],[7,"SELECTED_STYLE","","",null,null],[7,"DEFAULT_STYLE","","",null,null],[11,"deref","","",43,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"initialize","","",43,{"i":[{"n":"self"}]}],[11,"deref","","",44,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"initialize","","",44,{"i":[{"n":"self"}]}],[11,"new","","Creates a market tab.",45,{"i":[{"g":["game"],"n":"arc"},{"g":["event"],"n":"sender"}],"o":{"n":"box"}}],[11,"title","","Returns the title string describing the tab.",45,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"handle_event","","Handles the user provided event.",45,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[11,"draw","","Draws the tab in the given terminal and area.",45,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[0,"mission","gemini::gui::tab","",null,null],[3,"MissionTab","gemini::gui::tab::mission","Displays the mission tab.",null,null],[12,"state","","",46,null],[12,"sender","","",46,null],[11,"new","","Creates a mission tab.",46,{"i":[{"g":["game"],"n":"arc"},{"g":["event"],"n":"sender"}],"o":{"n":"box"}}],[11,"title","","Returns the title string describing the tab.",46,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"handle_event","","Handles the user provided event.",46,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[11,"draw","","Draws the tab in the given terminal and area.",46,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[0,"shipyard","gemini::gui::tab","",null,null],[3,"ShipyardTab","gemini::gui::tab::shipyard","Displays the shipyard tab.",null,null],[12,"state","","",47,null],[12,"sender","","",47,null],[12,"selected","","",47,null],[12,"max_selected","","",47,null],[12,"available_ships","","",47,null],[5,"draw_ship_list","","Draw a list of the given ships with their names.",null,null],[5,"draw_ship_info","","Draw detailed ship information for a given ship.",null,{"i":[{"n":"shipcharacteristics"},{"n":"terminal"},{"n":"rect"}]}],[11,"new","","Creates a shipyard tab.",47,{"i":[{"g":["game"],"n":"arc"},{"g":["event"],"n":"sender"}],"o":{"n":"box"}}],[11,"title","","Returns the title string describing the tab.",47,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"handle_event","","Handles the user provided event.",47,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[11,"draw","","Draws the tab in the given terminal and area.",47,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[0,"status","gemini::gui::tab","",null,null],[3,"StatusTab","gemini::gui::tab::status","Displays the status tab.",null,null],[12,"state","","",48,null],[12,"sender","","",48,null],[5,"draw_player_info","","Draw detailed player information.",null,{"i":[{"n":"player"},{"n":"arc"},{"n":"terminal"},{"n":"rect"}]}],[11,"new","","Creates a status tab.",48,{"i":[{"g":["game"],"n":"arc"},{"g":["event"],"n":"sender"}],"o":{"n":"box"}}],[11,"title","","Returns the title string describing the tab.",48,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"handle_event","","Handles the user provided event.",48,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[11,"draw","","Draws the tab in the given terminal and area.",48,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[0,"systemmap","gemini::gui::tab","",null,null],[3,"SELECTED_STYLE","gemini::gui::tab::systemmap","Styling for selected item.",null,null],[12,"__private_field","","",49,null],[3,"DOCKED_STYLE","","Styling for selected item.",null,null],[12,"__private_field","","",50,null],[3,"DEFAULT_STYLE","","Styling for unselected item.",null,null],[12,"__private_field","","",51,null],[3,"SystemMapTab","","Displays the map tab.",null,null],[12,"state","","",52,null],[12,"send_handle","","",52,null],[12,"selected_astronomical","","",52,null],[12,"max_selected_astronomical","","",52,null],[5,"draw_system_table","","",null,null],[5,"draw_system_map","","",null,{"i":[{"n":"usize"},{"n":"system"},{"n":"terminal"},{"n":"rect"}]}],[7,"SELECTED_STYLE","","",null,null],[7,"DOCKED_STYLE","","",null,null],[7,"DEFAULT_STYLE","","",null,null],[11,"deref","","",49,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"initialize","","",49,{"i":[{"n":"self"}]}],[11,"deref","","",50,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"initialize","","",50,{"i":[{"n":"self"}]}],[11,"deref","","",51,{"i":[{"n":"self"}],"o":{"n":"style"}}],[11,"initialize","","",51,{"i":[{"n":"self"}]}],[11,"num_astronomicals","","Returns the last index of satelites in the current system, defaults to zero.",52,{"i":[{"n":"arc"}],"o":{"n":"usize"}}],[11,"try_open_dialog","","Opens dialog for planet interaction. Actions available depends on the current player state.",52,{"i":[{"n":"self"}],"o":{"g":["box"],"n":"option"}}],[11,"new","","Creates a system map tab.",52,{"i":[{"g":["game"],"n":"arc"},{"g":["event"],"n":"sender"}],"o":{"n":"box"}}],[11,"title","","Returns the title string describing the tab.",52,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"handle_event","","Handles the user provided event.",52,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[11,"draw","","Draws the tab in the given terminal and area.",52,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[8,"Tab","gemini::gui::tab","Interface for dealing with visual tabs in the GUI.",null,null],[10,"new","","Creates a new tab.",53,{"i":[{"g":["game"],"n":"arc"},{"g":["event"],"n":"sender"}],"o":{"n":"box"}}],[10,"title","","Returns the title string describing the tab.",53,{"i":[{"n":"self"}],"o":{"n":"string"}}],[10,"handle_event","","Handles the user provided event.",53,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[10,"draw","","Draws the tab in the given terminal and area.",53,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[0,"title","gemini::gui","",null,null],[3,"TitlePage","gemini::gui::title","Title page GUI component displaying initial player options etc.",null,null],[12,"title","","",54,null],[12,"selected","","",54,null],[12,"actions","","",54,null],[4,"Action","","Actions available on the title page.",null,null],[13,"NewGame","","",55,null],[13,"LoadGame","","",55,null],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"action"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new title page.",54,{"o":{"n":"self"}}],[11,"handle_event","","Handles the user provided event.",54,{"i":[{"n":"self"},{"n":"event"}],"o":{"g":["guievent"],"n":"option"}}],[11,"draw","","Draws the dialog in the given terminal and area.",54,{"i":[{"n":"self"},{"n":"terminal"},{"n":"rect"}]}],[11,"new","gemini::gui","Creates a new GUI",34,{"i":[{"n":"simulator"}],"o":{"n":"self"}}],[11,"start_main_game","","",34,{"i":[{"n":"self"},{"n":"arc"}]}],[11,"start","","Starts the GUI by entering an infinite loop",34,{"i":[{"n":"self"}]}],[11,"draw","","Draws the interface to the terminal.",34,{"i":[{"n":"self"},{"n":"terminal"}],"o":{"g":["error"],"n":"result"}}],[0,"player","gemini","",null,null],[3,"Player","gemini::player","Player type holding the player's current ship, credits etc.",null,null],[12,"credits","","",56,null],[12,"ship","","",56,null],[12,"location","","",56,null],[12,"state","","",56,null],[4,"PlayerState","","Holds the current state of the player which affects the options of interaction.",null,null],[13,"InSystem","","",57,null],[13,"Docked","","",57,null],[13,"Traveling","","",57,null],[12,"start","gemini::player::PlayerState","",57,null],[12,"route","","",57,null],[17,"_IMPL_SERIALIZE_FOR_Player","gemini::player","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Player","","",null,null],[17,"_IMPL_SERIALIZE_FOR_PlayerState","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_PlayerState","","",null,null],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"player"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"TRAVEL_SPEED","","Travling speed between systems, ly/ms.",56,null],[11,"new","","Create a new player.",56,{"i":[{"n":"u32"},{"n":"ship"},{"n":"point"}],"o":{"n":"self"}}],[11,"update_state","","Update the player state.",56,{"i":[{"n":"self"}]}],[11,"balance","","Returns the player's current balance.",56,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ship","","Returns an reference to the player's active ship.",56,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"ship_mut","","Returns an reference to the player's active ship.",56,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"location","","Get the current player location.",56,{"i":[{"n":"self"}],"o":{"n":"point"}}],[11,"state","","Returns the player state.",56,{"i":[{"n":"self"}],"o":{"n":"playerstate"}}],[11,"dock","","Docks the player to the planet with the given id.",56,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"undock","","Undocks the player from its current planet.",56,{"i":[{"n":"self"}]}],[11,"refuel","","Attemps to fuel up the player ship as far as credits reaches.",56,{"i":[{"n":"self"}]}],[11,"set_route","","Sets the route for the player.",56,{"i":[{"n":"self"},{"g":["point"],"n":"vec"}]}],[11,"route","","Get the player's currrent route, if available.",56,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"option"}}],[11,"eta","","Get the estimated time of arrival (local time) and the destination of the current route.",56,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"default","","",56,{"o":{"n":"player"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"playerstate"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"resources","gemini","",null,null],[3,"RESOURCES","gemini::resources","",null,null],[12,"__private_field","","",58,null],[3,"AstronomicalNamesResource","","Resource used in name generation of celestial objects.",null,null],[12,"names","","",59,null],[12,"scientific_names","","",59,null],[12,"greek","","",59,null],[12,"roman","","",59,null],[12,"decorators","","",59,null],[3,"ShipResource","","Resource with all ships available in the game.",null,null],[12,"ships","","",60,null],[3,"AgentResource","","Resource containing all production/consumptions for factions and planets.",null,null],[12,"faction_ideals","","",61,null],[12,"faction_production","","",61,null],[12,"planet_ideals","","",61,null],[12,"planet_production","","",61,null],[5,"fetch_resource","","Attempts to returns the resource with the given type, will return None if the type has no resource or if the deserialization fails.",null,{"o":{"n":"option"}}],[7,"RESOURCES","","",null,null],[17,"_IMPL_SERIALIZE_FOR_AstronomicalNamesResource","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_AstronomicalNamesResource","","",null,null],[17,"_IMPL_SERIALIZE_FOR_ShipResource","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ShipResource","","",null,null],[17,"_IMPL_SERIALIZE_FOR_AgentResource","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_AgentResource","","",null,null],[8,"Resource","","Generic Resource trait to be implemented by all resource types which should be loaded at compile time. KEY must be unique to the specific resource (e.g the filename of the resource).",null,null],[18,"KEY","","",62,null],[11,"deref","","",58,{"i":[{"n":"self"}],"o":{"n":"hashmap"}}],[11,"initialize","","",58,{"i":[{"n":"self"}]}],[11,"eq","","",59,{"i":[{"n":"self"},{"n":"astronomicalnamesresource"}],"o":{"n":"bool"}}],[11,"ne","","",59,{"i":[{"n":"self"},{"n":"astronomicalnamesresource"}],"o":{"n":"bool"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"astronomicalnamesresource"}}],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"ship","gemini","",null,null],[3,"Ship","gemini::ship","Ship currently owned by the player.",null,null],[12,"integrity","","",63,null],[12,"fuel","","",63,null],[12,"base","","",63,null],[3,"ShipCharacteristics","","Represents the characteristics of a given ship model.",null,null],[12,"name","","",64,null],[12,"manufacturer","","",64,null],[12,"faction","","",64,null],[12,"kind","","",64,null],[12,"description","","",64,null],[12,"integrity","","",64,null],[12,"size","","",64,null],[12,"mass","","",64,null],[12,"slots","","",64,null],[12,"cost","","",64,null],[12,"range","","",64,null],[12,"fuel","","",64,null],[12,"cargo","","",64,null],[12,"detectability","","",64,null],[12,"maneuverability","","",64,null],[12,"defense","","",64,null],[12,"shield","","",64,null],[3,"Dimensions","","The size of a ship.",null,null],[12,"length","","",65,null],[12,"width","","",65,null],[12,"height","","",65,null],[3,"Shipyard","","Holds the different ships in the game.",null,null],[12,"ships","","",66,null],[4,"ShipType","","",null,null],[13,"Assault","","",67,null],[13,"Corvette","","",67,null],[13,"Freighter","","",67,null],[17,"_IMPL_SERIALIZE_FOR_Ship","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Ship","","",null,null],[17,"_IMPL_SERIALIZE_FOR_ShipCharacteristics","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ShipCharacteristics","","",null,null],[17,"_IMPL_SERIALIZE_FOR_ShipType","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ShipType","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Dimensions","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Dimensions","","",null,null],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"ship"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",63,{"i":[{"n":"shipcharacteristics"}],"o":{"n":"ship"}}],[11,"integrity","","Returns a reference to the ship's current integrity.",63,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"range","","Returns maximum jump range.",63,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"fuel","","Returns the ship's current fuel.",63,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"reduce_fuel","","Decrements the fuel level.",63,{"i":[{"n":"self"}]}],[11,"add_fuel","","Add the given amount to the fuel level.",63,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"characteristics","","Returns a reference to the ship's characteristics.",63,{"i":[{"n":"self"}],"o":{"n":"shipcharacteristics"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"shipcharacteristics"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"shiptype"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"dimensions"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Returns a new shipyard.",66,{"o":{"n":"shipyard"}}],[11,"add_ships","","Extend shipyard with more ships.",66,{"i":[{"n":"self"},{"n":"shipresource"}]}],[11,"get_available","","Get all available ships.",66,{"i":[{"n":"self"},{"n":"system"}],"o":{"g":["shipcharacteristics"],"n":"vec"}}],[11,"create_base_ship","","Create a new starting ship.",66,{"i":[{"n":"self"}],"o":{"n":"ship"}}],[0,"simulator","gemini","",null,null],[3,"Simulator","gemini::simulator","",null,null],[12,"game_state","","",68,null],[12,"game_config","","",68,null],[11,"new","","",68,{"o":{"n":"self"}}],[11,"new_game","","",68,{"i":[{"n":"self"}],"o":{"g":["game"],"n":"arc"}}],[11,"load_game","","",68,{"i":[{"n":"self"}],"o":{"g":["arc"],"n":"option"}}],[0,"utils","gemini","",null,null],[3,"Point","gemini::utils","Generic Point type for geometry.",null,null],[12,"x","","",69,null],[12,"y","","",69,null],[3,"OrdPoint","","Point with weight associated so that it can be ordered.",null,null],[12,"point","","",70,null],[12,"weight","","",70,null],[5,"edit_distance","","Returns the edit distance between strings `a` and `b` using Levenshtein distance. The runtime complexity is `O(m*n)`, where `m` and `n` are the strings' lengths.",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"n":"i32"}}],[17,"_IMPL_SERIALIZE_FOR_Point","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Point","","",null,null],[17,"_IMPL_SERIALIZE_FOR_OrdPoint","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_OrdPoint","","",null,null],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"point"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new point.",69,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"point"}}],[11,"origin","","Create a new point with origin coordinates.",69,{"o":{"n":"point"}}],[11,"distance","","Returns the euclidian distance to another point.",69,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"f64"}}],[11,"hash","","Returns the hash of the point coordinates. Hash based on algorithm used is presented in the paper: Optimized Spatial Hashing for Collision Detection of Deformable Objects.",69,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"add","","",69,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"add_assign","","",69,{"i":[{"n":"self"},{"n":"point"}]}],[11,"mul_assign","","",69,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"eq","","",69,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"bool"}}],[11,"hash","","",69,{"i":[{"n":"self"},{"n":"h"}]}],[11,"dimensions","","",69,{"o":{"n":"usize"}}],[11,"nth","","",69,null],[11,"nth_mut","","",69,null],[11,"from_value","","",69,null],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"ordpoint"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"cmp","","",70,{"i":[{"n":"self"},{"n":"ordpoint"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",70,{"i":[{"n":"self"},{"n":"ordpoint"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",70,{"i":[{"n":"self"},{"n":"ordpoint"}],"o":{"n":"bool"}}]],"paths":[[3,"Galaxy"],[3,"Planet"],[3,"PlanetBuilder"],[4,"PlanetType"],[4,"PlanetEconomy"],[3,"Sector"],[3,"Star"],[3,"StarBuilder"],[4,"StarType"],[3,"System"],[3,"SystemBuilder"],[3,"Reputation"],[4,"SystemSecurity"],[4,"SystemState"],[3,"Economy"],[3,"Bid"],[3,"BidBuilder"],[3,"Ask"],[3,"AskBuilder"],[4,"Commodity"],[3,"Agent"],[3,"Market"],[4,"Faction"],[3,"HANDLER"],[3,"EventHandler"],[4,"Event"],[3,"Game"],[8,"Updatable"],[3,"GameConfig"],[3,"NameGen"],[3,"PlanetGen"],[3,"SectorGen"],[3,"StarGen"],[3,"SystemGen"],[3,"Gui"],[4,"GUIEvent"],[3,"AlertDialog"],[3,"ConfirmDialog"],[3,"MultiDialog"],[8,"Dialog"],[3,"FACTION_COLORS"],[3,"DEFAULT_STYLE"],[3,"GalaxyMapTab"],[3,"SELECTED_STYLE"],[3,"DEFAULT_STYLE"],[3,"MarketTab"],[3,"MissionTab"],[3,"ShipyardTab"],[3,"StatusTab"],[3,"SELECTED_STYLE"],[3,"DOCKED_STYLE"],[3,"DEFAULT_STYLE"],[3,"SystemMapTab"],[8,"Tab"],[3,"TitlePage"],[4,"Action"],[3,"Player"],[4,"PlayerState"],[3,"RESOURCES"],[3,"AstronomicalNamesResource"],[3,"ShipResource"],[3,"AgentResource"],[8,"Resource"],[3,"Ship"],[3,"ShipCharacteristics"],[3,"Dimensions"],[3,"Shipyard"],[4,"ShipType"],[3,"Simulator"],[3,"Point"],[3,"OrdPoint"]]};
initSearch(searchIndex);
